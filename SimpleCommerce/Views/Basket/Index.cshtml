@model IEnumerable<SimpleCommerce.Models.BasketItemModel>

@{
    ViewData["Title"] = "My Basket";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>My Basket</h1>

<table id="basketTable" class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>Total</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td></td>
                <td></td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <th colspan="4" style="text-align:right">Total:</th>
            <th colspan="2"></th>
        </tr>
    </tfoot>
</table>
<link href="~/lib/datatables/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
@section Scripts {
    <script src="~/lib/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/lib/datatables/js/dataTables.bootstrap4.min.js"></script>
    <script>
        $(document).ready(function () {
            var table = $('#basketTable').DataTable({
                "columnDefs": [
                    {
                        "targets": -1,
                        "data": null,
                        "orderable": false,
                        "defaultContent": "<button>Remove</button>",
                    },
                    { "name": "ProductId", "data": "productId", "targets": 0, "visible": false },
                    { "name": "ProductName", "data": "productName", "targets": 1 },
                    {
                        "name": "ProductPrice",
                        "data": "productPrice",
                        "targets": 2,
                        "render": function (data, type, row, meta) {
                            return parseFloat(row.productPrice).toFixed(2);
                        }
                    },
                    { "name": "Quanitity", "data": "quanitity", "targets": 3 },
                    {
                        "targets": 4,
                        "orderable": false,
                        "data": null,
                        "render": function (data, type, row, meta) {
                            var total = row.productPrice * row.quanitity;
                            return total.toFixed(2);
                        }
                    }
                ],
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api(), data;

                    var numVal = function (i) {
                        return typeof i === 'string' ?
                            i * 1 :
                            typeof i === 'number' ?
                                i : 0;
                    };

                    // Total over all pages
                    total = api
                        .column(4)
                        .cache('search')
                        .reduce(function (a, b) {
                            return numVal(a) + numVal(b);
                        }, 0);

                    // Total over this page
                    pageTotal = api
                        .column(4, { page: 'current' })
                        .cache('search')
                        .reduce(function (a, b) {
                            return numVal(a) + numVal(b);
                        }, 0);

                    // Update footer
                    $(api.column(4).footer()).html(
                        parseFloat(pageTotal).toFixed(2) + ' (' + parseFloat(total).toFixed(2) + ' total)'
                    );
                }
            });

            $('#basketTable tbody').on('click', 'button', function () {
                var rowData = table.row($(this).parents('tr')).data();

                var basketUpdateModel = {
                    productId: rowData.productId
                }

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Remove")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(basketUpdateModel),
                    success: function (result) {
                        window.location.href = '@Url.Action("Index")';
                    }
                });
            });
        });
    </script>
}
